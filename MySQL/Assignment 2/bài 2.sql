DROP DATABASE IF EXISTS Testing_System_Assignment_1SonPC;
Create DATABASE Testing_System_Assignment_1SonPC;
use Testing_System_Assignment_2SonPC;


CREATE TABLE DEPARTMENT(
DepartmentID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
DepartmentName VARCHAR(30)
);

Drop TABLE IF EXISTS POSITION1;
CREATE TABLE POSITION1(
PositionID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
PositionName VARCHAR (10)
);

DROP TABLE IF EXISTS ACCOUNT1;
CREATE TABLE ACCOUNT1(
AccountID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
Email VARCHAR (50) NOT NULL UNIQUE,
Usename VARCHAR (10) NOT NULL UNIQUE,
FullName NVARCHAR (20) NOT NULL,
DepartmentID INT NOT NULL,
PositionID INT NOT NULL,
CreateDate DATE,
CONSTRAINT lien_ket_1 FOREIGN KEY (DepartmentID) REFERENCES DEPARTMENT(DepartmentID),
CONSTRAINT lien_ket_2 FOREIGN KEY (PositionID) REFERENCES POSITION1(PositionID)
);


DROP TABLE IF EXISTS GROUP1;
CREATE TABLE GROUP1(
GroupID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
GroupName VARCHAR (10) NOT NULL UNIQUE,
CreatorID INT NOT NULL,
CreateDate DATETIME DEFAULT ("28/10/2021"),
CONSTRAINT lien_ket_3 FOREIGN KEY (CreatorID) REFERENCES ACCOUNT1(AccountID)
);

DROP TABLE IF EXISTS GROUPACCOUNT;
CREATE TABLE GROUPACCOUNT(
GroupID INT NOT NULL,
AccountID INT NOT NULL,
JoinDate DATETIME DEFAULT ("28/10/2021"),
PRIMARY KEY(GroupID, AccountID),
CONSTRAINT lien_ket_4 FOREIGN KEY (GroupID) REFERENCES GROUP1(GroupID),
CONSTRAINT lien_ket_5 FOREIGN KEY (AccountID) REFERENCES ACCOUNT1(AccountID)
);

DROP TABLE IF EXISTS TYPEQUESTION;
CREATE TABLE TYPEQUESTION(
TypeID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
TypeName ENUM("Essay", "Multiple-Choice") NOT NULL
);

DROP TABLE IF EXISTS CATEGORYQUESTION;
CREATE TABLE CATEGORYQUESTION(
CategoryID INT AUTO_INCREMENT PRIMARY KEY,
CategoryName ENUM ("Java", "Net", "Sql", "Ruby", "Postman") NOT NULL UNIQUE
);
DROP TABLE IF EXISTS QUESTION;
CREATE TABLE QUESTION(
QuestionID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
Content VARCHAR (200) NOT NULL UNIQUE,
CategoryID INT NOT NULL,
TypeID INT NOT NULL,
CreatorID INT NOT NULL,
CreateDate DATE,
CONSTRAINT lien_ket_6 FOREIGN KEY (CategoryID) REFERENCES CATEGORYQUESTION(CategoryID),
CONSTRAINT lien_ket_7 FOREIGN KEY (TypeID) REFERENCES TYPEQUESTION(TypeID),
CONSTRAINT lien_ket_8 FOREIGN KEY (CreatorID) REFERENCES GROUP1(CreatorID)
);

DROP TABLE IF EXISTS ANSWER;
CREATE TABLE ANSWER(
AnswerID INT AUTO_INCREMENT PRIMARY KEY,
Content VARCHAR (200) NOT NULL UNIQUE,
QuestionID INT NOT NULL,
IsCrroct ENUM ("True","Fail") NOT NULL,
CONSTRAINT lien_ket_10 FOREIGN KEY (QuestionID) REFERENCES QUESTION(QuestionID)
);

DROP TABLE IF EXISTS EXAM;
CREATE TABLE EXAM(
ExamID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
Code1 INT,
Tile VARCHAR (20),
CategoryID INT,
Duration DATETIME,
CreatorID INT,
CreatDate DATE,
CONSTRAINT lien_ket_11 FOREIGN KEY (CategoryID) REFERENCES CATEGORYQUESTION(CategoryID),
CONSTRAINT lien_ket_12 FOREIGN KEY (CreatorID) REFERENCES GROUP1(CreatorID)
);

DROP TABLE IF EXISTS EXAMQUESTION;
CREATE TABLE EXAMQUESTION(
ExamID INT NOT NULL,
QuestionID INT NOT NULL,
CONSTRAINT lien_ket_14 FOREIGN KEY (ExamID) REFERENCES EXAM(ExamID),
CONSTRAINT lien_ket_15 FOREIGN KEY (QuestionID) REFERENCES QUESTION(QuestionID)
);




INSERT INTO DEPARTMENT VALUES (01,".Vũ Thị Thảo");
INSERT INTO DEPARTMENT VALUES (02,".Nguyễn Phương Anh");
INSERT INTO DEPARTMENT VALUES (03,".Trần Thu Huế");
INSERT INTO DEPARTMENT VALUES (04,".Trần Phi Hùng");
INSERT INTO DEPARTMENT VALUES (05,".Lê Ánh Ngọc ");
INSERT INTO DEPARTMENT VALUES (06,".Phạm Đức Thanh");
INSERT INTO DEPARTMENT VALUES (07,".Trần Văn Sơn");
INSERT INTO DEPARTMENT VALUES (08,".Phan Huỳnh Phước");
INSERT INTO DEPARTMENT VALUES (09,".Hà Mạnh Tú");
INSERT INTO DEPARTMENT VALUES (10,".Phạm Công Sơn");
INSERT INTO DEPARTMENT VALUES (11,".Đào Văn Thể");
INSERT INTO DEPARTMENT VALUES (12,".Trịnh Xuân Thái");
INSERT INTO DEPARTMENT VALUES (13,".Phan Bích Quyên");
INSERT INTO DEPARTMENT VALUES (14,".Phạm Hoàng Kim Dung");
INSERT INTO DEPARTMENT VALUES (15,".Hoàng Văn Cường");

